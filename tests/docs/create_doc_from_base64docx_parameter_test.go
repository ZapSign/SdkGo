package tests

import (
	"net/http/httptest"
	"testing"

	"github.com/ZapSign/SdkGo/controllers"
	"github.com/ZapSign/SdkGo/models"
	"github.com/ZapSign/SdkGo/utils"
	"github.com/stretchr/testify/assert"
)

func TestShouldStatus200WhenCreateDocumentWithBase64DocxParameter(t *testing.T) {
	var docsRoutePath = utils.GetDocsRoute()
	var getAPIToken = utils.GetApiToken()

	signersMock := []models.Signer{
		{
			Name:      "John Doe",
			Email:     "test@test.com",
			Auth_mode: "assinaturaTela",
		},
	}

	Base64PdfMock := models.Base64Docx{
		Signers:     signersMock,
		Name:        "Documento de Teste",
		Base64_docx: "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",
	}

	responseRecorderStatusCode := httptest.NewRecorder().Code
	statusCodeRequest, _ := controllers.PostRequest(Base64PdfMock, getAPIToken, docsRoutePath)

	assert.Equal(t, statusCodeRequest, responseRecorderStatusCode)
}
